# Generated by the protocol buffer compiler.  DO NOT EDIT!
# sources: nillion/nada/v1/types.proto
# plugin: python-betterproto
# This file has been @generated

from dataclasses import dataclass
from typing import (
    Dict,
    List,
)

import betterproto


class ScalarType(betterproto.Enum):
    """
    The Scalar Type enumeration.enum
     List of the different scalar types in Nada.
    """

    INTEGER = 0
    UNSIGNED_INTEGER = 1
    BOOLEAN = 2
    SECRET_INTEGER = 3
    SECRET_UNSIGNED_INTEGER = 4
    SECRET_BOOLEAN = 5
    SECRET_BLOB = 6
    SECRET_NON_ZERO_INTEGER = 7
    SECRET_NON_ZERO_UNSIGNED_INTEGER = 8
    ECDSA_PRIVATE_KEY = 9
    """ECDSA private key for the threshold ecdsa signature feature."""

    ECDSA_DIGEST_MESSAGE = 10
    """Public ECDSA message digest."""


@dataclass(eq=False, repr=False)
class Object(betterproto.Message):
    """Object: key-value hash map."""

    types: Dict[str, "NadaType"] = betterproto.map_field(
        1, betterproto.TYPE_STRING, betterproto.TYPE_MESSAGE
    )
    """/ Key-value types."""


@dataclass(eq=False, repr=False)
class Array(betterproto.Message):
    """Array type, defines a collection of homogeneous values"""

    inner_type: "NadaType" = betterproto.message_field(1)
    """Inner type of the elements of this array"""

    size: int = betterproto.uint32_field(2)
    """Size of the array"""


@dataclass(eq=False, repr=False)
class Tuple(betterproto.Message):
    """Tuple type, a binary tuple"""

    left: "NadaType" = betterproto.message_field(1)
    """Left type"""

    right: "NadaType" = betterproto.message_field(2)
    """Right type"""


@dataclass(eq=False, repr=False)
class NTuple(betterproto.Message):
    """NTuple: any number of heterogeneous values."""

    types: List["NadaType"] = betterproto.message_field(1)
    """NTuple types."""


@dataclass(eq=False, repr=False)
class CompositeType(betterproto.Message):
    array: "Array" = betterproto.message_field(1, group="composite_type")
    tuple: "Tuple" = betterproto.message_field(2, group="composite_type")
    ntuple: "NTuple" = betterproto.message_field(3, group="composite_type")
    object: "Object" = betterproto.message_field(4, group="composite_type")


@dataclass(eq=False, repr=False)
class NadaType(betterproto.Message):
    scalar: "ScalarType" = betterproto.enum_field(1, group="nada_type")
    composite: "CompositeType" = betterproto.message_field(2, group="nada_type")
